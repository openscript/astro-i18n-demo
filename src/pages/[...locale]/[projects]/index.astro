---
import type { GetStaticPaths, InferGetStaticPropsType } from 'astro';
import DefaultLayout from '../../../layouts/DefaultLayout.astro';
import { C } from '../../../configuration';
import { getContentEntryPath, parseLocale } from '../../../utils/i18n';
import { getCollection } from 'astro:content';

export const getStaticPaths = (async () => {
	const locales = Object.keys(C.LOCALES);

	const translations = locales.reduce((acc, l) => {
    const parsedLocale = parseLocale(l);
    const slug = C.MESSAGES[parsedLocale]['slugs.projects'];
		acc[l] = l === C.DEFAULT_LOCALE ? `/${slug}` : `/${l}/${slug}`;
		return acc;
	}, {} as Record<string, string>);

	return locales.map((l) => {
    const parsedLocale = parseLocale(l);
    const slug = C.MESSAGES[parsedLocale]['slugs.projects'];
		const locale = l === C.DEFAULT_LOCALE ? undefined : l;
		return { params: { locale, projects: slug }, props: { locale: parsedLocale, translations } };
	});

}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { translations, locale } = Astro.props as Props;

const projects = await getCollection('projects');

---

<DefaultLayout translations={translations} currentLocale={locale}>
	<h1>Projekte</h1>
  <ul>
    {
      projects.map(async (project) => {
        const p = project.data;
        if (!p) return undefined;
        return <li>
          <a href={await getContentEntryPath('projects', project.slug)}>
            {p.title}
          </a>
        </li>
      }).filter(Boolean)
    }
  </ul>
</DefaultLayout>
