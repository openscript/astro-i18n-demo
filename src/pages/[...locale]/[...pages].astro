---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';
import { getCollection } from 'astro:content';
import { splitLocaleFromPath } from '@timelet/i18n';
import DefaultLayout from '../../layouts/DefaultLayout.astro';
import { C } from '../../configuration';

export const getStaticPaths = (async () => {
  const pages = await getCollection('pages');

  const paths = pages.map(page => {
    const split = splitLocaleFromPath(page.slug);
    const locale = split && split.locale !== C.DEFAULT_LOCALE ? split.locale : undefined;
    const translations = pages.reduce((acc, p) => {
      const s = splitLocaleFromPath(p.slug);
      if(s && s.path === split?.path) {
        acc[s.locale] = [s.locale !== C.DEFAULT_LOCALE ? `/${s.locale}` : undefined, p.data.path].join("/");
      }
      return acc;
    }, {} as Record<string, string>);
    console.log(translations);
    return { params: { locale, pages: page.data.path }, props: {...page, translations, locale} };
  });

  return paths;
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const page = Astro.props as Props;

const { Content } = await page.render();
---
<DefaultLayout translations={page.translations} currentLocale={page.locale}>
  <Content/>
</DefaultLayout>
