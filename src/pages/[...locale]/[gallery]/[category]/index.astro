---
import type { InferGetStaticPropsType, GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import DefaultLayout from "../../../../layouts/DefaultLayout.astro";
import { C } from "../../../../configuration";
import { getLocaleSlug } from "../../../../i18n";
import { parseLocale } from "../../../../i18n";
import { joinPath, addTrailingSlash } from "../../../../path";
import slug from "limax";
import { Image } from "astro:assets";

export const getStaticPaths = (async () => {
  const categories = await getCollection("gallery");
  const locales = Object.keys(C.LOCALES);
  const paths = categories.flatMap((category) => {
    const pages = locales.map((l) => {
      const locale = parseLocale(l);
      const localeSlug = getLocaleSlug(locale);
      const gallerySlug = C.MESSAGES[locale]["slugs.gallery"];
      const categorySlug = slug(category.data.title[locale] ?? category.data.title[C.DEFAULT_LOCALE]);
      return {
        params: {
          locale: localeSlug,
          gallery: gallerySlug,
          category: categorySlug,
        },
        props: { locale, page: category.data },
      };
    });

    return pages.map((p) => ({
      ...p,
      props: {
        ...p.props,
        translations: pages.reduce(
          (acc, pp) => ({
            ...acc,
            [pp.props.locale]: `/${joinPath(
              pp.params.locale,
              pp.params.gallery,
              pp.params.category,
            )}`,
          }),
          {} as Record<string, string>,
        ),
      },
    }));
  });

  return paths;
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page, translations, locale } = Astro.props as Props;
const url = Astro.url;
---

<DefaultLayout translations={translations} currentLocale={locale}>
	<h1>{page.title[locale] ?? page.title[C.DEFAULT_LOCALE]}</h1>
  <ul>
    {
      page.images.map((image, index) => (
        <li>
          <a href={new URL(index.toString(), addTrailingSlash(url.toString())).href}>
            <Image src={image.src} alt={`Photo: ${image.title ? image.title[locale] : ''}`} width={320} />
          </a>
        </li>
      ))
    }
  </ul>
</DefaultLayout>
